<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan
		base-package="com.tkSystem">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- Spring的配置文件，这里主要配置和业务逻辑有关的 -->
	<!--=================== 数据源，事务控制，xxx ================ -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />


	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="url" value="${jdbc.jdbcUrl}"></property> 
		<property name="driverClassName" value="${jdbc.driverClass}"></property> 
		<property name="username" value="${jdbc.user}"></property> <property name="password" 
		value="${jdbc.password}"></property> </bean> -->

	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- <bean id="dataSourceOne" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property> <property name="driverClass" 
		value="${jdbc.driverClass}"></property> <property name="user" value="${jdbc.user}"></property> 
		<property name="password" value="${jdbc.password}"></property> </bean> <bean 
		id="dataSourceTwo" class="com.mchange.v2.c3p0.ComboPooledDataSource"> <property 
		name="jdbcUrl" value="${jdbc2.jdbcUrl}"></property> <property name="driverClass" 
		value="${jdbc2.driverClass}"></property> <property name="user" value="${jdbc2.user}"></property> 
		<property name="password" value="${jdbc2.password}"></property> </bean> -->
	<!-- <bean id="dynamicDataSource" class="com.tkSystem.system.DynamicDataSource"> 
		<property name="targetDataSources"> <map key-type="java.lang.String"> <entry 
		value-ref="dataSourceOne" key="dataSourceOne"></entry> <entry value-ref="dataSourceTwo" 
		key="dataSourceTwo"></entry> </map> </property> <property name="defaultTargetDataSource" 
		ref="dataSourceOne"> </property> </bean> -->
	<!--================== 配置和MyBatis的整合=============== -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property name="mapperLocations"
			value="classpath*:com/tkSystem/dao/mapper/*.xml"></property>
	</bean>

	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.tkSystem.dao.mapper"></property>
	</bean>

	<!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
		<!-- <constructor-arg name="executorType" value="BATCH"></constructor-arg> -->
	</bean>
	<!--============================================= -->

	<!-- ===============事务控制的配置 ================ -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--控制住数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式） -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut
			expression="execution(* com.tkSystem.service..*(..))" id="txPoint" />
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	<!-- <aop:config> <aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor"> 
		<aop:pointcut id="daoOne" expression="execution(* com.tkSystem.service..*(..))" 
		/> <aop:pointcut id="daoTwo" expression="execution(* com.tkSystem.service..*(..))" 
		/> <aop:before pointcut-ref="daoOne" method="setdataSourceOne" /> <aop:before 
		pointcut-ref="daoTwo" method="setdataSourceTwo" /> </aop:aspect> </aop:config> -->
	<!--配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" />
			<!--以get开始的所有方法 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!--配置spirng 调度器 -->
	<task:annotation-driven scheduler="myScheduler" />
	<task:scheduler id="myScheduler" pool-size="5" />
	<!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->


	<mvc:interceptors>
		<bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/**" />
			<bean
				class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.tkSystem.system.SecurityInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


</beans>
